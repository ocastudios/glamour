interactive/enemy.py:		self.music	= {'sound':pygame.mixer.Sound(os.path.join(directory.music,'schnauzer.ogg')), 'weight':5} 
interactive/enemy.py:		self.bow	= pygame.mixer.Sound(os.path.join(directory.enemies,'Schnauzer_bark.ogg')) 
interactive/enemy.py:			'sound':pygame.mixer.Sound(os.path.join(directory.music,'carriage.ogg')),
interactive/enemy.py:		self.music = self.music or {'sound':pygame.mixer.Sound(os.path.join(directory.music,'butterfly.ogg')),
interactive/enemy.py:		self.music = {'sound':pygame.mixer.Sound(os.path.join(directory.music,'old_lady.ogg')), 'weight':3} 
interactive/enemy.py:		self.growl_sound = pygame.mixer.Sound(os.path.join(directory.sounds,'enemies','lion3.ogg'))
interactive/enemy.py:		self.call = pygame.mixer.Sound(os.path.join(directory.sounds,'enemies','elephant9.ogg'))
interactive/enemy.py:		self.music = self.music or {'sound':pygame.mixer.Sound(os.path.join(directory.enemies,'viking_ship.ogg')),
interactive/enemy.py:		self.music = self.music or {'sound':pygame.mixer.Sound(os.path.join(directory.music,'fabrizio.ogg')),
interactive/enemy.py:		self.music = self.music or {'sound': pygame.mixer.Sound(os.path.join(directory.music,'hawk.ogg')),
interactive/fairy.py:	whistle	 = pygame.mixer.Sound(j(directory.sounds,'story','frames','s03.ogg'))
interactive/fairy.py:	music	   = j(directory.music,'1stSnowfall.ogg')
interactive/princess.py:		self.steps = [pygame.mixer.Sound(os.path.join(directory.princess_sounds,'steps','spike_heel','street',str(i)+'.ogg')) for i in range(0,5)]
interactive/princess.py:		self.jumpsound		= pygame.mixer.Sound(os.path.join(directory.princess_sounds,'pulo.ogg'))
interactive/princess.py:		self.kisssound		= pygame.mixer.Sound(os.path.join(directory.princess_sounds,'kiss.ogg'))
interactive/stage.py:		self.stage_music("bathhouse.ogg")
interactive/stage.py:		self.stage_music("snow-white.ogg")
interactive/stage.py:		self.stage_music("cinderella.ogg")
interactive/stage.py:		self.stage_music("sleeping-beauty.ogg")
interactive/stage.py:		self.stage_music("rapunzel.ogg")
interactive/stage.py:		toggle = widget.Button(self.universe, t('Toggle Fullscreen'), (710,760), [0,0], self.toggle_fullscreen)
interactive/stage.py:		self.buttons	= (resume, ok_button, leave, cancel_button, title, check_closet, toggle)
interactive/stage.py:		self.music  = j(directory.music,'pause.ogg')
interactive/stage.py:	def toggle_fullscreen(self):
interface/ball.py:		pygame.mixer.music.load(os.path.join(directory.music,"strauss_waltz_wedley.ogg"))
interface/inside.py:		self.music = os.path.join(directory.music,'menu.ogg')
interface/inside.py:		self.music = os.path.join(directory.music,'menu.ogg')
interface/inside.py:		self.music = os.path.join(directory.music,'menu.ogg')
interface/menu.py:		pygame.mixer.music.load(os.path.join(directory.music,'menu.ogg'))
interface/menu.py:			(t('Toggle Resolution'),100,self.toggle_resolution),
interface/menu.py:			(t('Toggle Fullscreen'),170,self.toggle_fullscreen),
interface/menu.py:	def toggle_resolution(self):
interface/menu.py:	def toggle_fullscreen(self):
interface/menu.py:		self.flip_sound = pygame.mixer.Sound(os.path.join(directory.sounds,'story','sflip.ogg'))
interface/menu.py:			(t('the foggy dew'),(615,1678),44,(128,0,0,255)),
interface/widget.py:	click = pygame.mixer.Sound(os.path.join(directory.sounds,'click.ogg'))
scenario/floors.py:	sound = pygame.mixer.Sound(os.path.join(settings.directory.sounds,'scenario','water','Wavesloop.ogg'))
